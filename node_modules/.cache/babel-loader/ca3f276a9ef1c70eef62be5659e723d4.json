{"ast":null,"code":"var _jsxFileName = \"/Users/khan/Desktop/choose-your-hero/src/components/Quiz/HeroBody/HeroBody.js\";\nimport React, { PureComponent } from 'react';\nimport Wizard from './../../../assets/burgerIcon2.png';\nimport './HeroBody.scss';\nimport Questions from './../../../questions.json';\n\nclass HeroBody extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showContent: \"questionText\",\n      showButton: \"myButton\",\n      wizardStyle: \"wizard\",\n      intro: Questions.intro,\n      introCount: 0\n    };\n\n    this.onClickHandler = () => {\n      let count = this.state.introCount + 1;\n\n      if (count < this.state.intro.length) {\n        this.setState({\n          introCount: count,\n          showContent: \"altQuestionText\"\n        });\n        setTimeout(() => {\n          this.setState({\n            showContent: \"questionText\"\n          });\n        }, 100);\n      } else alert(\"End reached!\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questionContentBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: this.state.showContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, this.state.intro[this.state.introCount]), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onClickHandler,\n      className: \"myButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"Continue\"));\n  }\n\n}\n\nexport default HeroBody;","map":{"version":3,"sources":["/Users/khan/Desktop/choose-your-hero/src/components/Quiz/HeroBody/HeroBody.js"],"names":["React","PureComponent","Wizard","Questions","HeroBody","state","showContent","showButton","wizardStyle","intro","introCount","onClickHandler","count","length","setState","setTimeout","alert","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,MAAMC,QAAN,SAAuBH,aAAvB,CAAoC;AAAA;AAAA;AAAA,SAChCI,KADgC,GACzB;AACHC,MAAAA,WAAW,EAAE,cADV;AAEHC,MAAAA,UAAU,EAAE,UAFT;AAGHC,MAAAA,WAAW,EAAE,QAHV;AAIHC,MAAAA,KAAK,EAAEN,SAAS,CAACM,KAJd;AAKHC,MAAAA,UAAU,EAAE;AALT,KADyB;;AAAA,SAShCC,cATgC,GASf,MAAM;AACnB,UAAIC,KAAK,GAAG,KAAKP,KAAL,CAAWK,UAAX,GAAwB,CAApC;;AACA,UAAGE,KAAK,GAAG,KAAKP,KAAL,CAAWI,KAAX,CAAiBI,MAA5B,EAAmC;AAC/B,aAAKC,QAAL,CAAc;AACVJ,UAAAA,UAAU,EAAEE,KADF;AAEVN,UAAAA,WAAW,EAAE;AAFH,SAAd;AAIAS,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKD,QAAL,CAAc;AACVR,YAAAA,WAAW,EAAE;AADH,WAAd;AAGH,SAJS,EAIR,GAJQ,CAAV;AAKH,OAVD,MAaIU,KAAK,CAAC,cAAD,CAAL;AACP,KAzB+B;AAAA;;AA4BhCC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAI,KAAKZ,KAAL,CAAWC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWI,KAAX,CAAiB,KAAKJ,KAAL,CAAWK,UAA5B,CADL,CADJ,eAII;AAAQ,MAAA,OAAO,EAAE,KAAKC,cAAtB;AAAsC,MAAA,SAAS,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CADJ;AAQH;;AArC+B;;AAwCpC,eAAeP,QAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport Wizard from './../../../assets/burgerIcon2.png';\nimport './HeroBody.scss';\nimport Questions from './../../../questions.json'\n\nclass HeroBody extends PureComponent{\n    state= {\n        showContent: \"questionText\",\n        showButton: \"myButton\",\n        wizardStyle: \"wizard\",\n        intro: Questions.intro,\n        introCount: 0,\n    }\n\n    onClickHandler = () => {\n        let count = this.state.introCount + 1;\n        if(count < this.state.intro.length){\n            this.setState({\n                introCount: count,\n                showContent: \"altQuestionText\"\n            });\n            setTimeout(() => {\n                this.setState({\n                    showContent: \"questionText\"\n                })\n            },100)\n        }\n            \n        else\n            alert(\"End reached!\")\n    }\n\n\n    render() {\n        return(\n            <div className=\"questionContentBox\">\n                <p className = {this.state.showContent}>\n                    {this.state.intro[this.state.introCount]}\n                </p>\n                <button onClick={this.onClickHandler} className=\"myButton\">Continue</button>\n            </div>\n        );\n    }\n}\n\nexport default HeroBody;"]},"metadata":{},"sourceType":"module"}