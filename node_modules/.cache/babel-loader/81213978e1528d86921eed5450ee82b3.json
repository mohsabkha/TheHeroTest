{"ast":null,"code":"var _jsxFileName = \"/Users/khan/Desktop/choose-your-hero/src/components/Quiz/HeroTest.js\";\nimport React, { PureComponent, Fragment } from 'react';\nimport HeroHeader from './HeroHeader/HeroHeader';\nimport HeroBody from './HeroBody/HeroBody';\n\nclass HeroTest extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      takeTheTest: false,\n      headerAppearance: \"App-header\",\n      headerTitle: true,\n      clearDisplay: false\n    };\n\n    this.takeTestButtonClickedHandler = () => {\n      let answer = this.state.takeTheTest;\n      let showTitle = this.state.headerTitle;\n      this.setState({\n        takeTheTest: !answer,\n        headerAppearance: \"altApp-Header\",\n        headerTitle: !showTitle\n      });\n    };\n\n    this.clearDisplayHandler = () => {\n      this.setState({\n        clearDisplay: {\n          display: true\n        }\n      });\n      console.log(\"display cleared\");\n    };\n  }\n\n  render() {\n    let theTest = null;\n\n    if (this.state.takeTheTest) {\n      theTest = /*#__PURE__*/React.createElement(HeroBody, {\n        clearDisplay: this.clearDisplayHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 23\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HeroHeader, {\n      showTitle: this.state.headerTitle,\n      headerCssPassed: this.state.headerAppearance,\n      takeTestButtonClicked: this.takeTestButtonClickedHandler,\n      clearDisplay: this.state.clearDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), theTest, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default HeroTest;","map":{"version":3,"sources":["/Users/khan/Desktop/choose-your-hero/src/components/Quiz/HeroTest.js"],"names":["React","PureComponent","Fragment","HeroHeader","HeroBody","HeroTest","state","takeTheTest","headerAppearance","headerTitle","clearDisplay","takeTestButtonClickedHandler","answer","showTitle","setState","clearDisplayHandler","display","console","log","render","theTest"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,QAAN,SAAuBJ,aAAvB,CAAqC;AAAA;AAAA;AAAA,SACjCK,KADiC,GACzB;AACJC,MAAAA,WAAW,EAAE,KADT;AAEJC,MAAAA,gBAAgB,EAAE,YAFd;AAGJC,MAAAA,WAAW,EAAE,IAHT;AAIJC,MAAAA,YAAY,EAAE;AAJV,KADyB;;AAAA,SAQjCC,4BARiC,GAQF,MAAM;AACjC,UAAIC,MAAM,GAAG,KAAKN,KAAL,CAAWC,WAAxB;AACA,UAAIM,SAAS,GAAG,KAAKP,KAAL,CAAWG,WAA3B;AACA,WAAKK,QAAL,CAAc;AACVP,QAAAA,WAAW,EAAE,CAACK,MADJ;AAEVJ,QAAAA,gBAAgB,EAAE,eAFR;AAGVC,QAAAA,WAAW,EAAE,CAACI;AAHJ,OAAd;AAKH,KAhBgC;;AAAA,SAkBjCE,mBAlBiC,GAkBX,MAAM;AACxB,WAAKD,QAAL,CAAc;AACVJ,QAAAA,YAAY,EAAC;AACTM,UAAAA,OAAO,EAAE;AADA;AADH,OAAd;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,KAzBgC;AAAA;;AA2BjCC,EAAAA,MAAM,GAAE;AACJ,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAG,KAAKd,KAAL,CAAWC,WAAd,EAA0B;AACtBa,MAAAA,OAAO,gBAAG,oBAAC,QAAD;AAAU,QAAA,YAAY,EAAE,KAAKL,mBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACH;;AACD,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,SAAS,EAAE,KAAKT,KAAL,CAAWG,WAD1B;AAEI,MAAA,eAAe,EAAE,KAAKH,KAAL,CAAWE,gBAFhC;AAGI,MAAA,qBAAqB,EAAE,KAAKG,4BAHhC;AAII,MAAA,YAAY,EAAE,KAAKL,KAAL,CAAWI,YAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMKU,OANL,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ;AAWH;;AA3CgC;;AA8CrC,eAAef,QAAf","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\nimport HeroHeader from './HeroHeader/HeroHeader';\nimport HeroBody from './HeroBody/HeroBody';\n\nclass HeroTest extends PureComponent {\n    state = {\n        takeTheTest: false,\n        headerAppearance: \"App-header\",\n        headerTitle: true,\n        clearDisplay: false\n    }\n    \n    takeTestButtonClickedHandler = () => {\n        let answer = this.state.takeTheTest;\n        let showTitle = this.state.headerTitle;\n        this.setState({\n            takeTheTest: !answer,\n            headerAppearance: \"altApp-Header\",\n            headerTitle: !showTitle,\n        })\n    }\n\n    clearDisplayHandler = () => {\n        this.setState({\n            clearDisplay:{\n                display: true\n            }\n        });\n        console.log(\"display cleared\")\n    }\n\n    render(){\n        let theTest = null;\n        if(this.state.takeTheTest){\n            theTest = <HeroBody clearDisplay={this.clearDisplayHandler}/>\n        }\n        return(\n            <Fragment>\n                <HeroHeader\n                    showTitle={this.state.headerTitle} \n                    headerCssPassed={this.state.headerAppearance} \n                    takeTestButtonClicked={this.takeTestButtonClickedHandler}\n                    clearDisplay={this.state.clearDisplay}/>\n                {theTest}\n                <br/>\n            </Fragment>\n        );\n    }\n}\n\nexport default HeroTest;"]},"metadata":{},"sourceType":"module"}