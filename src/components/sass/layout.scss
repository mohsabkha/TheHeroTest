$gutter-verticle: 2rem;
$gutter-horizontal: 4rem;
$grid-width: 100%;

@mixin clearFix {
    &::after{
        content: "";
        display: table;
        clear: both;
    }
}

@mixin col-style {
    height: 80%;
    float: left;
    text-align: center;
        &:not(:last-child){
            margin-right: $gutter-horizontal;
        }
    @include clearFix();
}

[class^="col"]{
    padding: 1rem 0rem;
}

.row{
    max-height: 100vh;
    background-size: cover;
    border-radius: 2rem;
    //styling self
    max-width: $grid-width; //standard is 1440 width, if 1440 not available, 100% used
    color: rgb(255, 255, 255);
    margin: $gutter-verticle auto;
    
    &:not(:last-child){
        margin-bottom: $gutter-verticle;
    }

    @include clearFix();
    .col-1-of-1-center{
        width: 80;
        @include col-style();
    }

    .col-1-of-1{
        width: calc(100%);
        @include col-style();
    }

    .col-1-of-2{
        width: calc((100% - #{$gutter-horizontal})/2);
        @include col-style();
    }

    .col-1-of-3{
        //(full width - (numberOfGutters)*gutterLength)/number of columns
        width: calc((100% - 2*#{$gutter-horizontal})/3);
        @include col-style();
    }
    .col-2-of-3{
        //((full width - (numberOfGutters)*gutterLength)/number of columns)*(fraction of space taken) -- last part is optional
        width: calc(2*((100% - 2*#{$gutter-horizontal})/3) + #{$gutter-horizontal});
        @include col-style();
    }

    .col-1-of-4{
        width: calc((100% - 3*#{$gutter-horizontal})/4);
        @include col-style();
    }

    .col-3-of-4{
        width: calc(3*((100% - 3*#{$gutter-horizontal})/4) + 2*#{$gutter-horizontal});
        @include col-style();
    }
    
  }
